plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.1.1'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.bouncycastle:bcprov-jdk15on:1.68'
	implementation 'commons-codec:commons-codec:1.15'
	implementation 'com.auth0:java-jwt:3.13.0'

	implementation 'org.flywaydb:flyway-core'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'io.r2dbc:r2dbc-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	testRuntimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.springframework:spring-jdbc'
	testRuntimeOnly 'io.r2dbc:r2dbc-h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.5.5'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

tasks['sonarqube'].dependsOn test

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}
